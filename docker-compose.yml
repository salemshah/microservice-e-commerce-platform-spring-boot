services:
#  # ============================================================
  #  # SPRING CLOUD CONFIG SERVER
  #  # Provides centralized configuration for all microservices
  #  # ============================================================
  #  config-server:
  #    container_name: ms_config_server
  #    image: openjdk:21-jdk
  #    working_dir: /app
  #    volumes:
  #      - ./config-server:/app                   # Mount your local config-server code
  #    command: [ "java", "-jar", "target/config-server-0.0.1-SNAPSHOT.jar" ]
  #    ports:
  #      - "9090:9090"
  #    networks:
  #      - microservices-net
  #    environment:
  #      SPRING_PROFILES_ACTIVE: native
  #      JAVA_TOOL_OPTIONS: "-Xms256m -Xmx512m"
  #    restart: unless-stopped
  #
  #  # ============================================================
  #  # SPRING CLOUD DISCOVERY (EUREKA) SERVER
  #  # Registers and manages all microservices
  #  # ============================================================
  #  discovery-service:
  #    container_name: ms_discovery_service
  #    image: openjdk:21-jdk
  #    working_dir: /app
  #    depends_on:
  #      - config-server
  #    volumes:
  #      - ./discovery-service:/app
  #    command: [ "java", "-jar", "target/discovery-service-0.0.1-SNAPSHOT.jar" ]
  #    ports:
  #      - "8761:8761"
  #    environment:
  #      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:9090
  #      JAVA_TOOL_OPTIONS: "-Xms256m -Xmx512m"
  #    networks:
  #      - microservices-net
  #    restart: unless-stopped
  #
  #  # ============================================================
  #  # CUSTOMER SERVICE
  #  # Example microservice (connected to MongoDB and registered in Eureka)
  #  # ============================================================
  #  customer-service:
  #    container_name: ms_customer_service
  #    image: openjdk:21-jdk
  #    working_dir: /app
  #    depends_on:
  #      - config-server
  #      - discovery-service
  #      - mongodb
  #    volumes:
  #      - ./customer-service:/app
  #    command: [ "java", "-jar", "target/customer-service-0.0.1-SNAPSHOT.jar" ]
  #    ports:
  #      - "8082:8082"
  #    environment:
  #      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:9090
  #      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
  #      SPRING_DATA_MONGODB_HOST: mongodb
  #      SPRING_DATA_MONGODB_PORT: 27017
  #      SPRING_DATA_MONGODB_USERNAME: mongodb
  #      SPRING_DATA_MONGODB_PASSWORD: mongodb
  #      SPRING_DATA_MONGODB_DATABASE: customer
  #      JAVA_TOOL_OPTIONS: "-Xms512m -Xmx1024m"
  #    networks:
  #      - microservices-net
  #    restart: unless-stopped

  # ============================================================
  # POSTGRES DATABASE
  # For relational microservices (optional)
  # ============================================================
  postgres:
    container_name: ms_postgres_db
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: app_db
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5532:5432"
    networks:
      - microservices-net

  # ============================================================
  # PGADMIN 4 (PostgreSQL Web UI)
  # Access: http://localhost:5050
  # ============================================================
  pgadmin:
    container_name: ms_pgadmin_ui
    image: dpage/pgadmin4:8
    depends_on:
      - postgres
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net

  # ============================================================
  # MONGODB
  # Non-relational DB for document-based services
  # ============================================================
  mongodb:
    container_name: ms_mongodb
    image: mongo:7
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - microservices-net

  # ============================================================
  # MONGO EXPRESS
  # Simple web UI for MongoDB (http://localhost:8081)
  # ============================================================
  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express
    depends_on:
      - mongodb
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongodb
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    networks:
      - microservices-net

  # ============================================================
  # MAILDEV
  # Mail testing tool for dev environments
  # SMTP: 1025 | UI: http://localhost:1080
  # ============================================================
  maildev:
    container_name: ms_maildev
    image: maildev/maildev
    restart: unless-stopped
    ports:
      - "1090:1090"
      - "1026:1026"
    networks:
      - microservices-net

# ============================================================
# Shared Network
# Allows inter-service communication
# ============================================================
networks:
  microservices-net:
    driver: bridge

# ============================================================
# Persistent Volumes
# Keeps your data across container restarts
# ============================================================
volumes:
  postgres_data:
  pgadmin_data:
  mongo_data:
